# This is a basic workflow to help you get started with Actions


name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  Check_Validation:
    runs-on: ubuntu-latest
  
    env:
      group: Test
    steps:
    - uses: actions/checkout@v2
#     - # "Note: the 'AZURE_SP' secret is required to be added into GitHub Secrets. See this blog post for details: https://samlearnsazure.blog/2019/12/13/github-actions/"
#       name: Azure Login
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_SP }}
        
# #     - name: 'Az CLI login'
# #       uses: azure/login@v1with:client-id:${{ secrets.AZURE_CLIENT_ID }}tenant-id:${{ secrets.AZURE_TENANT_ID }}subscription-id:${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
#     - name: Install Python 3.7
#       uses: actions/setup-python@v1
#       with:
#         python-version: 3.7
#     - name: Install pip3
#       run: python -m pip install --upgrade pip setuptools wheel
#     - name: Install Checkov using pip3
#       run: pip3 install checkov
#     - name: Security test with Checkov
#       run: checkov -d '${{ github.workspace }}' -o junitxml -s >> checkov_sectests.xml
      
#     - name: Publish Security Test Results (Checkov)
#       uses: EnricoMi/publish-unit-test-result-action@v1
#       if: always()
#       with:
#         files: test-results/**/*.xml   
        
#     - name: Terraform Install
#       uses: hashicorp/setup-terraform@v1
#       with:
#         terraform_version: 0.14.11
        
#     - name: Terraform Init
#       run: terraform init
#     - name: Terraform Validate
#       run: terraform validate
      
  Deploy:
    needs: Check_Validation 
    runs-on: ubuntu-latest
    # 'Note: Azure DevOps strategy>runOnce does not have an equivalent in GitHub Actions yet, and only the deploy steps are transferred to steps'
    environment:
      name: Test   #Env_Variable
    steps:
    - uses: actions/checkout@v2

    - uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        files: '["**/parameters.yml"]'
      env:
        BackendService-Arm: ${{secrets.BackendService_Arm}}
        Env: ${{secrets.Env}}
        Azure-ResourceGroup: ${{secrets.Azure_ResourceGroup}}
     
    - name: list
      run: |
       cat ${{ github.workspace }}/pipelines/parameters.yml
      
  
      
        
       
       
#     - uses: cschleiden/replace-tokens@v1
#       with:
#          tokenPrefix: '#{'
#          tokenSuffix: '}#'
#          files: '["**/variables.tf"]'
         
#     - run: |
#         cat ${{ github.workspace }}/variables.tf
#         cat ${{ github.workspace }}/pipelines/parameters.yml
#       shell: bash
#     - name: Terraform Install
#       uses: hashicorp/setup-terraform@v1
#       with:
#          terraform_version: 0.14.11
         
#     - name: Terraform Init
#       run: terraform init
#     - name: Terraform Plan
#       run: terraform plan
       
#     - name: Terraform Apply
#       run: terraform apply
                    
   
                    
